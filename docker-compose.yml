services:
  moodledb: 
    image: postgres:15
    environment:
      POSTGRES_USER: moodle
      POSTGRES_PASSWORD: "m@0dl3ing"
      POSTGRES_DB: moodle
    volumes:
      - pg_data:/var/lib/postgresql/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U moodle -d moodle"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgbouncer:
    image: edoburu/pgbouncer:latest
    depends_on:
      moodledb:
        condition: service_healthy
    environment:
      DB_USER: moodle
      DB_PASSWORD: "m@0dl3ing"
      DB_HOST: moodledb
      DB_NAME: moodle
      POOL_MODE: transaction
    restart: unless-stopped

  moodleapp:
    image: moodlehq/moodle-php-apache:8.3
    container_name: moodleapp
    depends_on:
      - pgbouncer
    environment:
      MOODLE_DOCKER_WEB_PORT: 8080
      MOODLE_DOCKER_WEB_HOST: localhost
      MOODLE_DOCKER_DBNAME: moodle
      MOODLE_DOCKER_DBUSER: moodle
      MOODLE_DOCKER_DBPASS: "m@0dl3ing"
      MOODLE_DOCKER_DBTYPE: postgres 
      MOODLE_DOCKER_DBHOST: pgbouncer
      MOODLE_DOCKER_DBPORT: 5432
    volumes:
      - ./moodle_code:/var/www/html 
      - ./000-default.conf:/etc/apache2/sites-enabled/000-default.conf
      - moodle_data_vol:/var/www/moodledata 
    entrypoint: /bin/bash -c "chown -R www-data:www-data /var/www/html && chmod -R 777 /var/www/moodledata && apache2-foreground"
    restart: unless-stopped
    user: "www-data"
    ports:
      - "8090:80"

  # haproxy:
  #   image: haproxy:latest
  #   depends_on:
  #     - moodleapp
  #   volumes:
  #     - ./haproxy_config/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
  #   ports:
  #     - "8080:80"
  #   restart: unless-stopped

volumes:
  pg_data:
  moodle_data_vol: